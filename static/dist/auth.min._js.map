{"version":3,"sources":["auth.js"],"names":["handleSignup","firstName","document","getElementById","lastName","clearErrorMessages","isValid","showError","trim","value","password","confirmPassword","user","localStorage","setItem","JSON","stringify","successMessage","style","display","textContent","opacity","reset","event","preventDefault","username","users","parse","getItem","find","createElement","querySelector","prepend","inputElement","message","errorDiv","className","color","fontSize","borderColor","querySelectorAll","forEach","msg","remove","addEventListener","togglePasswordSignUp","passwordInputSignUp","getAttribute","type","toggleConfirmPassword","confirmPasswordInput","setAttribute","handleLogin"],"mappings":"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","file":"auth.min.js","sourcesContent":["// auth.js\r\n\r\n// Wait for the DOM to load before running scripts\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Toggle password visibility for signup\r\n    const togglePasswordSignUp = document.getElementById('togglePasswordSignUp');\r\n    const passwordInputSignUp = document.getElementById('password');\r\n    if (togglePasswordSignUp) {\r\n        togglePasswordSignUp.addEventListener('click', function () {\r\n            const type = passwordInputSignUp.getAttribute('type') === 'password' ? 'text' : 'password';\r\n            passwordInputSignUp.setAttribute('type', type);\r\n            this.classList.toggle('fa-eye-slash');\r\n        });\r\n    }\r\n\r\n    // Toggle password visibility for confirm password\r\n    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');\r\n    const confirmPasswordInput = document.getElementById('confirmPassword');\r\n    if (toggleConfirmPassword) {\r\n        toggleConfirmPassword.addEventListener('click', function () {\r\n            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n            confirmPasswordInput.setAttribute('type', type);\r\n            this.classList.toggle('fa-eye-slash');\r\n        });\r\n    }\r\n\r\n    // Handle signup\r\n    document.getElementById('signupBtn').addEventListener('click', function (event) {\r\n        event.preventDefault(); // Prevent form submission\r\n        handleSignup();\r\n    });\r\n\r\n    // Handle login\r\n    document.getElementById('loginForm').addEventListener('submit', handleLogin);\r\n});\r\n\r\n// Function to handle signup\r\nfunction handleSignup() {\r\n    const firstName = document.getElementById('firstName');\r\n    const lastName = document.getElementById('lastName');\r\n    const password = document.getElementById('password');\r\n    const confirmPassword = document.getElementById('confirmPassword');\r\n\r\n    // Clear previous error messages\r\n    clearErrorMessages();\r\n\r\n    let isValid = true;\r\n\r\n    // Validate fields\r\n    if (!firstName.value.trim()) {\r\n        showError(firstName, 'Please fill this field');\r\n        isValid = false;\r\n    }\r\n    if (!lastName.value.trim()) {\r\n        showError(lastName, 'Please fill this field');\r\n        isValid = false;\r\n    }\r\n    if (!password.value.trim()) {\r\n        showError(password, 'Please fill this field');\r\n        isValid = false;\r\n    }\r\n    if (!confirmPassword.value.trim()) {\r\n        showError(confirmPassword, 'Please fill this field');\r\n        isValid = false;\r\n    } else if (password.value !== confirmPassword.value) {\r\n        showError(confirmPassword, 'Passwords do not match');\r\n        isValid = false;\r\n    }\r\n\r\n    if (isValid) {\r\n        // Store user details in localStorage\r\n        const user = { firstName: firstName.value, lastName: lastName.value, password: password.value };\r\n        localStorage.setItem('user', JSON.stringify(user));\r\n\r\n        // Display signup success message\r\n        const successMessage = document.getElementById('successMessage');\r\n        successMessage.textContent = 'Signup successful!';\r\n        successMessage.style.display = 'block';\r\n\r\n        // Fade out success message after a delay\r\n        setTimeout(() => {\r\n            successMessage.style.opacity = 0;\r\n            setTimeout(() => successMessage.style.display = 'none', 1000);\r\n        }, 3000);\r\n\r\n        document.getElementById('signupForm').reset();\r\n    }\r\n}\r\n\r\n// Function to handle user login\r\nfunction handleLogin(event) {\r\n    event.preventDefault(); // Prevent form submission\r\n    const username = document.getElementById('name').value.trim();\r\n    const password = document.getElementById('password').value;\r\n    const users = JSON.parse(localStorage.getItem('users')) || []; // Retrieve all users\r\n\r\n    // Clear previous error messages\r\n    document.getElementById('usernameError').textContent = '';\r\n    document.getElementById('passwordError').textContent = '';\r\n\r\n    let isValid = true;\r\n\r\n    // Validate fields\r\n    if (!username) {\r\n        document.getElementById('usernameError').textContent = 'Please fill this field';\r\n        isValid = false;\r\n    }\r\n    if (!password) {\r\n        document.getElementById('passwordError').textContent = 'Please fill this field';\r\n        isValid = false;\r\n    }\r\n\r\n    // If validation fails, return early\r\n    if (!isValid) return;\r\n\r\n    // Check if the user exists and credentials match\r\n    const user = users.find(user => user.firstName === username && user.password === password); // Find user\r\n\r\n    if (user) {\r\n        const successMessage = document.createElement('p');\r\n        successMessage.textContent = 'Login successful';\r\n        successMessage.classList.add('success-message');\r\n        document.querySelector('.container').prepend(successMessage);\r\n        // Redirect to main.html after a delay\r\n        setTimeout(() => {\r\n            window.location.href = 'main.html';\r\n        }, 1000); // Redirect after 1 second\r\n    } else {\r\n        document.getElementById('passwordError').textContent = 'Invalid credentials'; // Invalid credentials\r\n    }\r\n}\r\n\r\n// Utility functions for showing and clearing error messages\r\nfunction showError(inputElement, message) {\r\n    const errorDiv = document.createElement('div');\r\n    errorDiv.className = 'error-message';\r\n    errorDiv.textContent = message;\r\n    errorDiv.style.color = 'red';\r\n    errorDiv.style.fontSize = '12px';\r\n    errorDiv.style.marginTop = '5px';\r\n\r\n    inputElement.style.borderColor = 'red'; // Add red border for error\r\n    inputElement.parentElement.appendChild(errorDiv);\r\n}\r\n\r\nfunction clearErrorMessages() {\r\n    const errorMessages = document.querySelectorAll('.error-message');\r\n    errorMessages.forEach(msg => msg.remove());\r\n}\r\n"]}