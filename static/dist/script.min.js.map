{"version":3,"sources":["script.js"],"names":["document","addEventListener","getElementById","passwordInputSignUp","togglePasswordSignUp","type","getAttribute","setAttribute","toggleConfirmPassword","confirmPasswordInput","toggle","event","preventDefault","handleSignup","handleLogin","window","analyzeProfile","gpa","sat","extracurriculars","leadership","community_service","work_experience","response","result","regeneratorRuntime","async","_context","prev","next","value","name","school","awrap","major","stringify","GPA","parseFloat","SAT","parseInt","Extracurriculars","fetch","Leadership","headers","Work_Experience","sent","Error","json","admission_chance","t0","innerText","stop"],"mappings":"aACAA,SAASC,iBAAiB,mBAAoB,WAA9CD,IAASC,EAAiBD,SAAAE,eAAoB,wBAC1CC,EAAAH,SAAAE,eAAA,YACME,GACAD,EAAsBH,iBAASE,QAAe,WAG5C,IAAMG,EAAoD,aAA7CF,EAAoBG,aAAa,QAAyB,OAAS,WAFpFF,EAAsBG,aAAA,OAAAF,GACtBD,KAAAA,UAAqBH,OAAAA,kBAOzB,IAAAO,EAAAR,SAAAE,eAAA,yBAEMO,EAAuBT,SAASE,eAAe,mBACjDM,GAFEA,EAAwBR,iBAASE,QAAe,WAChDO,IAAAA,EAAN,aAAMA,EAAgCP,aAAe,QAArD,OAAA,WAIQO,EAAqBF,aAAa,OAAQF,GAH9CG,KAAAA,UAAJE,OAA2B,kBAKtBV,SAJDE,eAAA,aAAAD,iBAAA,QAAA,SAAAU,GAOJA,EAAAC,iBAGIC,iBAIJb,SAASE,eAAe,aAAaD,iBAAiB,SAAUa,aAGhEC,OAAOC,eAAiB,WAAA,IAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA,OAAAC,mBAAAC,MAAA,SAAAC,GAAA,OAAA,OAAAA,EAAAC,KAAAD,EAAAE,MAAA,KAAA,EAAA,OAHf3B,SAAeA,eAAaD,QAAAA,MAKlBD,SAASE,eAAe,UAAU4B,MAF9Cd,EAAAA,SAAiBd,eAAA,OAAA4B,MAAA9B,SAAAE,eAAA,aAAA4B,MAAAZ,EAAAlB,SAAAE,eAAA,OAAA4B,MAAA9B,SAAAE,eAAA,SAAA4B,MAAAX,EAAAnB,SAAAE,eAAA,oBAAA4B,MAAAV,EAAApB,SAAAE,eAAA,cAAA4B,MACdC,EAAgB7B,SAAeA,eADjB,qBAAA4B,MAEdE,EAAkB9B,SAAAA,eAAyB4B,mBAF7BA,MAAAH,EAAAC,KAAA,GAAAD,EAAAE,KAAA,GAAAJ,mBAAAQ,MAKC/B,MAAT,gCALQ,CAMdgC,OAAQlC,OACRmB,QAAAA,CACAC,eAAsBlB,oBAEtBoB,KAAAA,KAVca,UAUInC,CAVJoC,IAAAC,WAAApB,GAAAqB,IAAAC,SAAArB,EAAA,IAAAsB,iBAAAD,SAaOE,EAAM,IACnBC,WADoDH,SAAAnB,EAAA,IAE1DuB,kBAASJ,SAAAlB,EAAA,IACLuB,gBAAgBL,SAAAjB,EAAA,SAhBR,KAAA,GAAA,IAKRtB,EALQ2B,EAAAkB,MAoBHN,GApBG,CAAAZ,EAAAE,KAAA,GAAA,MAAA,MAoBW,IAFFiB,MAAA,+BAlBT,KAAA,GAAA,OAAAnB,EAAAE,KAAA,GAAAJ,mBAAAQ,MAqBQV,EAAUwB,QArBlB,KAAA,GAqBRP,EArBQb,EAAAkB,KAsBRH,SAAAA,eAAoB,UAACtB,UAArBsB,qBAAAA,OAJiBlB,EAAAwB,iBAAA,WAAA,YAlBTrB,EAAAE,KAAA,GAAA,MAAA,KAAA,GAAAF,EAAAC,KAAA,GAAAD,EAAAsB,GAAAtB,EAAA,MAAA,IAwBRiB,QAAAA,MAAAA,SAAAA,EAAAA,IANiB5C,SAAfE,eAAA,UAAAgD,UAAA,oCAlBM,KAAA,GAAA,IAAA,MAAA,OAAAvB,EAAAwB,SAAA,KAAA,KAAA,CAAA,CAAA,GAAA","file":"script.min.js","sourcesContent":["// Wait for the DOM to load before running scripts\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    // Toggle password visibility for signup\r\n    const togglePasswordSignUp = document.getElementById('togglePasswordSignUp');\r\n    const passwordInputSignUp = document.getElementById('password');\r\n    if (togglePasswordSignUp) {\r\n        togglePasswordSignUp.addEventListener('click', function () {\r\n            const type = passwordInputSignUp.getAttribute('type') === 'password' ? 'text' : 'password';\r\n            passwordInputSignUp.setAttribute('type', type);\r\n            this.classList.toggle('fa-eye-slash');\r\n        });\r\n    }\r\n\r\n    // Toggle password visibility for confirm password\r\n    const toggleConfirmPassword = document.getElementById('toggleConfirmPassword');\r\n    const confirmPasswordInput = document.getElementById('confirmPassword');\r\n    if (toggleConfirmPassword) {\r\n        toggleConfirmPassword.addEventListener('click', function () {\r\n            const type = confirmPasswordInput.getAttribute('type') === 'password' ? 'text' : 'password';\r\n            confirmPasswordInput.setAttribute('type', type);\r\n            this.classList.toggle('fa-eye-slash');\r\n        });\r\n    }\r\n\r\n    // Handle signup\r\n    document.getElementById('signupBtn').addEventListener('click', function (event) {\r\n        event.preventDefault(); // Prevent form submission\r\n        handleSignup();\r\n    });\r\n\r\n    // Handle login\r\n    document.getElementById('loginForm').addEventListener('submit', handleLogin);\r\n\r\n    // Function to analyze student profile\r\n    window.analyzeProfile = async function () {\r\n        const name = document.getElementById('name').value;\r\n        const school = document.getElementById('school').value;\r\n        const gpa = document.getElementById('gpa').value;\r\n        const gpa_scale = document.getElementById('gpa_scale').value;\r\n        const sat = document.getElementById('sat').value;\r\n        const major = document.getElementById('major').value;\r\n        const extracurriculars = document.getElementById('extracurriculars').value;\r\n        const leadership = document.getElementById('leadership').value;\r\n        const community_service = document.getElementById('community_service').value;\r\n        const work_experience = document.getElementById('work_experience').value;\r\n\r\n        try {\r\n            const response = await fetch('http://127.0.0.1:5000/predict', {\r\n                method: 'POST',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                },\r\n                body: JSON.stringify({\r\n                    GPA: parseFloat(gpa),\r\n                    SAT: parseInt(sat, 10),\r\n                    Extracurriculars: parseInt(extracurriculars, 10),\r\n                    Leadership: parseInt(leadership, 10),\r\n                    Community_Service: parseInt(community_service, 10),\r\n                    Work_Experience: parseInt(work_experience, 10)\r\n                })\r\n            });\r\n\r\n            if (!response.ok) throw new Error('Network response was not ok');\r\n            const result = await response.json();\r\n            document.getElementById('result').innerText = `Admission Chance: ${result.admission_chance ? 'Accepted' : 'Rejected'}`;\r\n        } catch (error) {\r\n            console.error('Error:', error);\r\n            document.getElementById('result').innerText = 'Error: Unable to analyze profile.';\r\n        }\r\n    };\r\n});\r\n\r\n// Your existing functions like handleSignup(), handleLogin(), showError(), etc., would go here.\r\n\r\n"]}