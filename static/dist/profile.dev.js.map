{"version":3,"sources":["profile.js"],"names":["analyzeProfile","exam_type","document","getElementById","value","rank_or_percentile","category","gender","preferred_course","console","log","parseInt","fetch","method","headers","body","JSON","stringify","response","ok","Error","json","result","admission","collegesInfo","colleges","forEach","college","innerHTML","innerText","error","addEventListener","querySelector"],"mappings":";;AAAA;AACA,SAAeA,cAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AACI;AACMC,UAAAA,SAFV,GAEsBC,QAAQ,CAACC,cAAT,CAAwB,WAAxB,EAAqCC,KAF3D;AAGUC,UAAAA,kBAHV,GAG+BH,QAAQ,CAACC,cAAT,CAAwB,oBAAxB,EAA8CC,KAH7E;AAIUE,UAAAA,QAJV,GAIqBJ,QAAQ,CAACC,cAAT,CAAwB,UAAxB,EAAoCC,KAJzD;AAKUG,UAAAA,MALV,GAKmBL,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCC,KALrD;AAMUI,UAAAA,gBANV,GAM6BN,QAAQ,CAACC,cAAT,CAAwB,kBAAxB,EAA4CC,KANzE,EAQI;;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAY;AACRT,YAAAA,SAAS,EAAEA,SADH;AAERI,YAAAA,kBAAkB,EAAEM,QAAQ,CAACN,kBAAD,EAAqB,EAArB,CAFpB;AAGRC,YAAAA,QAAQ,EAAEA,QAHF;AAIRC,YAAAA,MAAM,EAAEA,MAJA;AAKRC,YAAAA,gBAAgB,EAAEA;AALV,WAAZ;AATJ;AAAA;AAAA,0CAkB+BI,KAAK,CAAC,+BAAD,EAAkC;AAC1DC,YAAAA,MAAM,EAAE,MADkD;AAE1DC,YAAAA,OAAO,EAAE;AACL,8BAAgB;AADX,aAFiD;AAK1DC,YAAAA,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAe;AACjBhB,cAAAA,SAAS,EAAEA,SADM;AAEjBI,cAAAA,kBAAkB,EAAEM,QAAQ,CAACN,kBAAD,EAAqB,EAArB,CAFX;AAGjBC,cAAAA,QAAQ,EAAEA,QAHO;AAIjBC,cAAAA,MAAM,EAAEA,MAJS;AAKjBC,cAAAA,gBAAgB,EAAEA;AALD,aAAf;AALoD,WAAlC,CAlBpC;;AAAA;AAkBcU,UAAAA,QAlBd;;AAAA,cAgCaA,QAAQ,CAACC,EAhCtB;AAAA;AAAA;AAAA;;AAAA,gBAiCkB,IAAIC,KAAJ,CAAU,6BAAV,CAjClB;;AAAA;AAAA;AAAA,0CAoC6BF,QAAQ,CAACG,IAAT,EApC7B;;AAAA;AAoCcC,UAAAA,MApCd;;AAsCQ;AACA,cAAIA,MAAM,CAACC,SAAP,KAAqB,UAAzB,EAAqC;AAC7BC,YAAAA,YAD6B,GACd,EADc,EAGjC;;AACAF,YAAAA,MAAM,CAACG,QAAP,CAAgBC,OAAhB,CAAwB,UAAAC,OAAO,EAAI;AAC/BH,cAAAA,YAAY,8DACoBG,OAAO,CAAC,WAAD,CAD3B,gEAEmBA,OAAO,CAAC,QAAD,CAF1B,gEAGmBA,OAAO,CAAC,QAAD,CAH1B,2BAAZ;AAKH,aAND;AAQAzB,YAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkCyB,SAAlC,iLAGMJ,YAHN;AAKH,WAjBD,MAiBO;AACHtB,YAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkC0B,SAAlC,GAA8C,8EAA9C;AACH;;AA1DT;AAAA;;AAAA;AAAA;AAAA;AA6DQpB,UAAAA,OAAO,CAACqB,KAAR,CAAc,QAAd;AACA5B,UAAAA,QAAQ,CAACC,cAAT,CAAwB,QAAxB,EAAkC0B,SAAlC,GAA8C,mCAA9C;;AA9DR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,C,CAkEA;;;AACA3B,QAAQ,CAAC6B,gBAAT,CAA0B,kBAA1B,EAA8C,YAAW;AACrD7B,EAAAA,QAAQ,CAAC8B,aAAT,CAAuB,MAAvB,EAA+BD,gBAA/B,CAAgD,OAAhD,EAAyD/B,cAAzD;AACH,CAFD","sourcesContent":["// Function to analyze student profile\r\nasync function analyzeProfile() {\r\n    // Get input values\r\n    const exam_type = document.getElementById('exam_type').value;\r\n    const rank_or_percentile = document.getElementById('rank_or_percentile').value;\r\n    const category = document.getElementById('category').value;\r\n    const gender = document.getElementById('gender').value;\r\n    const preferred_course = document.getElementById('preferred_course').value;\r\n\r\n    // Log input values for debugging\r\n    console.log({\r\n        exam_type: exam_type,\r\n        rank_or_percentile: parseInt(rank_or_percentile, 10),\r\n        category: category,\r\n        gender: gender,\r\n        preferred_course: preferred_course\r\n    });\r\n\r\n    try {\r\n        const response = await fetch('http://127.0.0.1:5000/predict', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify({\r\n                exam_type: exam_type,\r\n                rank_or_percentile: parseInt(rank_or_percentile, 10),\r\n                category: category,\r\n                gender: gender,\r\n                preferred_course: preferred_course\r\n            })\r\n        });\r\n\r\n        if (!response.ok) {\r\n            throw new Error(\"Network response was not ok\");\r\n        }\r\n\r\n        const result = await response.json();\r\n\r\n        // Check the admission status and prepare the output\r\n        if (result.admission === \"Accepted\") {\r\n            let collegesInfo = \"\";\r\n\r\n            // Assuming the result contains college details\r\n            result.colleges.forEach(college => {\r\n                collegesInfo += `\r\n                    <strong>College:</strong> ${college['Institute']}<br>\r\n                    <strong>Branch:</strong> ${college['Branch']}<br>\r\n                    <strong>Cutoff:</strong> ${college['Cutoff']}<br>\r\n                `;\r\n            });\r\n\r\n            document.getElementById('result').innerHTML = `\r\n                <strong>Admission Status:</strong> Accepted!<br>\r\n                Here are the possible colleges for your chosen branch:<br><br>\r\n                ${collegesInfo}\r\n            `;\r\n        } else {\r\n            document.getElementById('result').innerText = \"Admission Status: Rejected. Unfortunately, you didn't qualify for admission.\";\r\n        }\r\n\r\n    } catch (error) {\r\n        console.error('Error:', error);\r\n        document.getElementById('result').innerText = 'Error: Unable to analyze profile.';\r\n    }\r\n}\r\n\r\n// Wait for the DOM to load before adding event listeners\r\ndocument.addEventListener('DOMContentLoaded', function() {\r\n    document.querySelector('.btn').addEventListener('click', analyzeProfile);\r\n});\r\n"],"file":"profile.dev.js"}